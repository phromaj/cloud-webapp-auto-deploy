stages:
  - deploy
  - configure

variables:
  GOOGLE_PROJECT_ID: "student-sup-de-vinci"
  GOOGLE_CREDENTIALS: $GOOGLE_CREDENTIALS # Variable CI/CD pour les credentials
  SSH_USER: "ci_user"

deploy:
  stage: deploy
  image: hashicorp/terraform:latest
  script:
    - terraform init
    - |
      if terraform plan -out=tfplan -var "google_project_id=$GOOGLE_PROJECT_ID" -var "google_credentials=$GOOGLE_CREDENTIALS" -var "ssh_user=$SSH_USER"; then
        echo "L'infrastructure est déjà en place."
      else
        terraform apply -auto-approve -var "google_project_id=$GOOGLE_PROJECT_ID" -var "google_credentials=$GOOGLE_CREDENTIALS" -var "ssh_user=$SSH_USER"
      fi
    - echo "$SSH_USER:$(terraform output -raw private_key)" > ssh_key.pem
    - chmod 600 ssh_key.pem

configure:
  stage: configure
  image: alpine:latest  # Image légère avec SSH
  before_script:
    - apk add --no-cache openssh
  script:
    - for i in {1..3}; do
        VM_IP=$(terraform output -raw vm_external_ips | sed -n "${i}p");
        ssh -o StrictHostKeyChecking=no -i ssh_key.pem $SSH_USER@$VM_IP "docker swarm init || true";
      done
